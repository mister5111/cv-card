name: Deploy

on: push

jobs: 
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v1
          
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy
          
      - name: Set permission
        run: | 
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          sudo -s
          apt install -y lsb-release ca-certificates apt-transport-https software-properties-common gnupg
          wget -qO /etc/apt/trusted.gpg.d/ondrej.gpg https://packages.sury.org/php/apt.gpg
          echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list
          apt update
          apt install nginx php8.2-fpm -y
          systemctl enable php8.2-fpm
          chown -R root:admin /etc/nginx
          chmod -R 775 /etc/nginx
          chown -R root:admin /var/www
          chmod -R 775 /var/www
          ENDSSH

      - name: Copy nginx-conf
        run: | 
            rsync -ahvz --delete -e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy' conf/nginx/visit-card.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/etc/nginx/conf.d
            rsync -ahvz --delete -e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy' conf/nginx/nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/etc/nginx
      
      - name: Copy project
        run: | 
            rsync -ahvvz --delete --no-perms --no-owner --no-group --omit-dir-times -e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy' ./visit-card ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www

      - name: Deploy to server
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/deploy ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          sudo -s
          chmod +x /var/www/visit-card/script/run_vm
          chmod +x /var/www/visit-card/script/run_vm_docker
          systemctl restart nginx
          ENDSSH

      - name: Create Secret
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/deploy ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          sudo mkdir -p /usr/secure
          echo "${{ secrets.TOKEN }}" | sudo tee /usr/secure/.token > /dev/null
          ENDSSH
